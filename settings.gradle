rootProject.name = 'atrium'

buildscript {
    gradle.ext.tutteli_plugins_version = '0.32.2'
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "ch.tutteli:tutteli-gradle-settings:$gradle.ext.tutteli_plugins_version"
    }
}

apply plugin: 'ch.tutteli.settings'

def kotlinJvm = { self, String suffix ->
    self.folder(suffix, "$suffix-") {
        prefixed('common', 'jvm')
    }
}

def bundleWithExtensionsAndSmokeTest = { self, String apiName ->
    self.kotlinJvmJs(apiName)

    if (JavaVersion.current() >= JavaVersion.VERSION_1_9) {
        self.folder(apiName) {
            _ "$apiName-smoke-test"
            folder("extensions") {
                _ "$apiName-smoke-test-kotlin_1_3"
            }
        }
    }
}

def apiWithExtensions = { self, String apiName ->
    self.kotlinJvmJs(apiName)
    self.folder(apiName, "$apiName-") {
        extensions {
            kotlinJvmJs('kotlin_1_3')
        }
    }
}

//noinspection GroovyAssignabilityCheck
include {

    bundles {
        bundleWithExtensionsAndSmokeTest(delegate, 'fluent-en_GB')
        bundleWithExtensionsAndSmokeTest(delegate, 'infix-en_GB')
    }

    apis('api-') {
        apiWithExtensions(delegate, 'fluent-en_GB')
        apiWithExtensions(delegate, 'infix-en_GB')
    }

    core('core-') {
        kotlinJvmJs('api')
        kotlinJvmJs('robstoll')
        kotlinJvmJs('robstoll-lib')
    }

    kotlinJvmJs('logic')
    logic('logic-') {
        extensions {
            kotlinJvmJs('kotlin_1_3')
        }
    }

    translations('translations-') {
        kotlinJvmJs('de_CH')
        kotlinJvmJs('en_GB')
    }

    misc {
        kotlinJvmJs('specs')
        kotlinJvmJs('verbs')
        kotlinJvmJs('verbs-internal')

        tools {
            _ 'bc-test'
            project('readme-examples')
        }
    }

    //TODO remove all below with 1.0.0
    misc {
        folder("deprecated") {

            domain('domain-') {
                kotlinJvmJs('api')
                kotlinJvmJs('builders')
                kotlinJvmJs('robstoll')
                kotlinJvmJs('robstoll-lib')
            }
        }


    }
}

description = 'The domain logic of Atrium as common module.'

dependencies {
    api prefixedProject('domain-builders-common')

    // it is up to the consumer which atrium-translations module is used at runtime
    compileOnly prefixedProject('translations-en_GB-common')

    testImplementation prefixedProject('api-fluent-en_GB-common')
    testImplementation prefixedProject('specs-common')
}


apply from: "$project.projectDir/../generateLogic.gradle"
def generateLogic = createGenerateLogicTask(project, "impls", '',
    ['/creating/charsequence/contains/creators' : new Tuple5(
        'CharSequenceContains.CheckerOptionLogic',
        'ch.tutteli.atrium.logic.creating.charsequence.contains.CharSequenceContains',
        /checkerOption: (CharSequenceContains.CheckerOptionLogic<T, [^>]+>)/,
        '<T : CharSequence, S : CharSequenceContains.SearchBehaviour> CharSequenceContains.CheckerOptionLogic<T, S>',
        'containsBuilder.container.getImpl'
    )])
compileKotlinCommon.dependsOn(generateLogic)

sourceSets {
    main.kotlin.srcDirs += generatedFolder
}
